'''
Simplex Algorithm in Python (Max. Problem)

author: Tatjana Karl
website: https://github.com/tatjana-karl

Please feel free to use and modify this, but keep the above information. Thanks!

You need a multidimensional Array as an input and will get a multidimensional Array as an output
Make sure youre using a maximising problem

Makes sure you let the function run untill the last row is only <= 0
e.g. with a line like this:
while tableau[-1,0] > 0 or tableau[-1,1] > 0 or tableau[-1,2] > 0 or tableau[-1,3] > 0 or tableau[-1,4] > 0:
  tableau = Simplex(tableau)
 
or check out my example
'''

# NumPy
import numpy as np

def Simplex(tableau):
    print('Function run started')
    simplexTableau = tableau.copy()

    print('Simplextableau at the start:')
    print(simplexTableau)


    #Step 1: Find the biggest value in the last line to determine the pivotcolumn
    max = np.max(simplexTableau[-1])
    pivotcolumn = np.argmax(simplexTableau[-1,:])


    #Step 2: Divide the last column with the according picotcolumn value to calculate the "engpass". Be careful to not to delete the actual values
    engpass = np.array([])

    for i in range(len(simplexTableau)-1):
      engpässe_temp = simplexTableau[i,-1]/simplexTableau[i,pivotcolumn]
      engpass = np.append(engpass,engpässe_temp)


    #Step 3: Find the smallest positive value from the "engpass" values to determine the pivotline
    for i in range(engpass.size):
      if engpass[i] < 0:
        engpass[i] = 999999

    pivotline = np.argmin(engpass)


    #Step 4: Pivotelement needs to be 1 for the code to work. Divide the whole pivotline with the pivotelement value
    pivotelement = simplexTableau[pivotline,pivotcolumn]
    
    #can only work if the value isn't zero
    #you could change the zero to take the machine accurancy into account using epsilon
    if pivotelement != 0:
      simplexTableau[pivotline,:] = simplexTableau[pivotline,:]/pivotelement
      pivotelement = simplexTableau[pivotline,pivotcolumn]


    #Step 5: Subtract all the lines with the pivotline till all the values until the pivotcolumn is only zeros (except the pivotelement)
    #Everything above the pivotline
    for i in range(pivotline):
      #you could change the zero to take the machine accurancy into account using epsilon
      if simplexTableau[i,pivotcolumn] != 0:
        simplexTableau[i] = simplexTableau[i]-(simplexTableau[i,pivotcolumn]*simplexTableau[pivotline])
      else:
        break
    #Everything under the pivotline
    for i in range(pivotline+1,len(simplexTableau)):
      #you could change the zero to take the machine accurancy into account using epsilon
      if simplexTableau[i,pivotcolumn] != 0:
        simplexTableau[i] = simplexTableau[i]-(simplexTableau[i,pivotcolumn]*simplexTableau[pivotline])
      else:
        break
    
    print('Simplextableau at the end:')
    print(simplexTableau)
    
    return simplexTableau
